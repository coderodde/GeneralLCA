package com.github.coderodde.generallca;

import java.util.Objects;

/**
 * This class implements a node for general trees. It allows any number of 
 * child nodes.
 * 
 * @author Rodion "rodde" Efremov
 * @version 1.6 (Mar 18, 2022)
 */
public final class GeneralTreeNode {
    
    private final String name;
    private final int depth;
    private GeneralTreeNode parent;
    
    GeneralTreeNode(String name, int depth, GeneralTreeNode parent) {
        this.name = name;
        this.depth = depth;
        this.parent = parent;
    }
    
    int getDepth() {
        return depth;
    }
    
    public String getName() {
        return name;
    }
    
    public GeneralTreeNode getParent() {
        return parent;
    }
    
    public void setParent(GeneralTreeNode parent) {
        this.parent = parent;
    }
    
    @Override
    public boolean equals(Object o) {
        if (!(o instanceof GeneralTreeNode)) {
            return false;
        }
        
        GeneralTreeNode other = (GeneralTreeNode) o;
        return name.equals(other.name);
    }

    @Override
    public int hashCode() {
        // Generated by NetBeans IDE 12.6
        int hash = 7;
        hash = 19 * hash + Objects.hashCode(this.name);
        return hash;
    }
}
